/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hold_or_kp: hold_or_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_OR_KP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mo_or_kp: mo_or_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_OR_KP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        hmr_left: hmr_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        hmr_right: hmr_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ALPHA {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q                 &kp W                 &kp F                                &kp P                   &kp B        &kp J    &kp L                     &kp U                       &kp Y                   &kp SQT                 &none
&none  &hmr_left LEFT_GUI A  &hmr_left LEFT_ALT R  &hmr_left LEFT_CONTROL S             &hmr_left LEFT_SHIFT T  &kp G        &kp M    &hmr_right RIGHT_SHIFT N  &hmr_right RIGHT_CONTROL E  &hmr_right RIGHT_ALT I  &hmr_right RIGHT_GUI O  &none
&none  &kp Z                 &kp X                 &kp C                                &kp D                   &kp V        &kp K    &kp H                     &kp COMMA                   &kp DOT                 &kp FSLH                &none
                                                   &hold_or_kp LC(LA(LS(LGUI))) ESCAPE  &mo_or_kp 0 SPACE       &kp SPACE    &kp RET  &mo 0                     &kp RALT
            >;
        };

        HMR {
            bindings = <
&none  &none         &none         &none             &none           &none    &none  &none            &none              &none          &none          &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &none  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI  &none
&none  &none         &none         &none             &none           &none    &none  &none            &none              &none          &none          &none
                                   &none             &none           &none    &none  &none            &none
            >;
        };
    };
};
